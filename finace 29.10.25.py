from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import asyncio
import re
import os

# üîπ –¢–≤–æ–π —Ç–æ–∫–µ–Ω (–Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π –µ–≥–æ –¥—Ä—É–≥–∏–º!)
TOKEN = "8492691594:AAHGomYK8lOc-AUGzJ-PtHGopAixKsPOlI0"

bot = Bot(token=TOKEN)
dp = Dispatcher()

# –§—É–Ω–∫—Ü–∏—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–ª—è MarkdownV2
def escape_markdown(text: str) -> str:
    return re.sub(r'([_*\[\]()~`>#+\-=|{}.!])', r'\\\1', text)

# –§—É–Ω–∫—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
async def send_safe_message(message: types.Message, text: str, reply_markup=None):
    safe_text = escape_markdown(text)
    await message.answer(safe_text, reply_markup=reply_markup, parse_mode="MarkdownV2")

# –ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
def main_menu():
    return ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text="üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ø–∏—Ä–∞–º–∏–¥–∞"),
                KeyboardButton(text="üé£ –§–∏—à–∏–Ω–≥"),
            ],
            [
                KeyboardButton(text="üè¶ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"),
                KeyboardButton(text="üë§ –ö—Ç–æ —Ç–∞–∫–∏–µ –¥—Ä–æ–ø—ã"),
            ],
            [
                KeyboardButton(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã / –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"),
                KeyboardButton(text="‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ"),
            ]
        ],
        resize_keyboard=True
    )

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥—Ä–æ–ø–æ–≤ —Å –≤–∏–¥–µ–æ
def drops_menu():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üé¨ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ")],
            [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]
        ],
        resize_keyboard=True
    )

# /start
@dp.message(Command("start"))
async def start(message: types.Message):
    await send_safe_message(
        message,
        "–ü—Ä–∏–≤–µ—Ç! üëã\n–Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –æ—Ç dias_helper.\n–í—ã–±–µ—Ä–∏ —Ç–µ–º—É –∏–∑ –º–µ–Ω—é –∏–ª–∏ –Ω–∞–ø–∏—à–∏ /menu."
    )

# /menu
@dp.message(Command("menu"))
async def menu(message: types.Message):
    await send_safe_message(message, "–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é —Ç–µ–º—É üëá", reply_markup=main_menu())

# üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ø–∏—Ä–∞–º–∏–¥–∞
@dp.message(lambda message: message.text == "üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ø–∏—Ä–∞–º–∏–¥–∞")
async def pyramid_info(message: types.Message):
    text = (
        "üí∞ *–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ø–∏—Ä–∞–º–∏–¥–∞* ‚Äî —ç—Ç–æ —Å—Ö–µ–º–∞, –≥–¥–µ –ø—Ä–∏–±—ã–ª—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤—ã–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –Ω–µ –∏–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞, "
        "–∞ –∏–∑ –≤–ª–æ–∂–µ–Ω–∏–π –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.\n\n"
        "üö´ –¢–∞–∫–∏–µ —Å—Ö–µ–º—ã –Ω–µ–∑–∞–∫–æ–Ω–Ω—ã –∏ –º–æ–≥—É—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –ø–æ—Ç–µ—Ä–µ –¥–µ–Ω–µ–≥.\n\n"
        "üìå *–ü—Ä–∏–∑–Ω–∞–∫–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –ø–∏—Ä–∞–º–∏–¥—ã:*\n"
        "‚Ä¢ –û–±–µ—â–∞–Ω–∏–µ –≤—ã—Å–æ–∫–æ–π –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ –∑–∞ –∫–æ—Ä–æ—Ç–∫–∏–π —Å—Ä–æ–∫\n"
        "‚Ä¢ –î–∞–≤–ª–µ–Ω–∏–µ ¬´–≤—Å—Ç—É–ø–∏—Ç—å —Å—Ä–æ—á–Ω–æ¬ª\n"
        "‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –∏–ª–∏ —É—Å–ª—É–≥–∏"
    )
    await send_safe_message(message, text)

# üé£ –§–∏—à–∏–Ω–≥
@dp.message(lambda message: message.text == "üé£ –§–∏—à–∏–Ω–≥")
async def phishing_info(message: types.Message):
    text = (
        "üé£ *–§–∏—à–∏–Ω–≥* ‚Äî —Å–ø–æ—Å–æ–± –æ–±–º–∞–Ω–∞, –∫–æ–≥–¥–∞ –º–æ—à–µ–Ω–Ω–∏–∫–∏ –≤—ã–¥–∞—é—Ç —Å–µ–±—è –∑–∞ –±–∞–Ω–∫–∏ –∏–ª–∏ —Å–µ—Ä–≤–∏—Å—ã, "
        "—á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–∞—Ä–æ–ª–∏ –∏ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç.\n\n"
        "‚ö†Ô∏è –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–º —Å—Å—ã–ª–∫–∞–º!\n\n"
        "üí° *–°–æ–≤–µ—Ç—ã –¥–ª—è –∑–∞—â–∏—Ç—ã:* \n"
        "‚Ä¢ –ù–µ –æ—Ç–∫—Ä—ã–≤–∞–π –ø–∏—Å—å–º–∞ –æ—Ç –Ω–µ–∑–Ω–∞–∫–æ–º—Ü–µ–≤\n"
        "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è–π –∞–¥—Ä–µ—Å–∞ —Å–∞–π—Ç–æ–≤\n"
        "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é"
    )
    await send_safe_message(message, text)

# üè¶ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
@dp.message(lambda message: message.text == "üè¶ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å")
async def safety_info(message: types.Message):
    text = (
        "üè¶ *–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å* ‚Äî —ç—Ç–æ —É–º–µ–Ω–∏–µ –∑–∞—â–∏—â–∞—Ç—å —Å–≤–æ–∏ –¥–µ–Ω—å–≥–∏ –∏ –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç –º–æ—à–µ–Ω–Ω–∏–∫–æ–≤.\n\n"
        "‚úÖ –°–æ–≤–µ—Ç—ã:\n"
        "‚Ä¢ –ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π –ø–∞—Ä–æ–ª–∏ –∏ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç\n"
        "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–∞—Ä–æ–ª–∏ –∏ –º–µ–Ω–µ–¥–∂–µ—Ä—ã –ø–∞—Ä–æ–ª–µ–π\n"
        "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è–π –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –±–∞–Ω–∫–∏"
    )
    await send_safe_message(message, text)

# üë§ –ö—Ç–æ —Ç–∞–∫–∏–µ –¥—Ä–æ–ø—ã (—Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç + –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–∏–¥–µ–æ)
@dp.message(lambda message: message.text == "üë§ –ö—Ç–æ —Ç–∞–∫–∏–µ –¥—Ä–æ–ø—ã")
async def drops_info(message: types.Message):
    text = (
        "üë§ *–î—Ä–æ–ø* (–¥–µ–Ω–µ–∂–Ω—ã–π –º—É–ª) ‚Äî —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –∑–∞ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å "
        "—Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —á—É–∂–∏—Ö –¥–µ–Ω–µ–≥.\n\n"
        "‚ö†Ô∏è –≠—Ç–æ –Ω–µ–∑–∞–∫–æ–Ω–Ω–æ –∏ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ —É–≥–æ–ª–æ–≤–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏.\n\n"
        "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ—Ä–æ—Ç–∫–æ–µ –≤–∏–¥–µ–æ (30 —Å–µ–∫—É–Ω–¥), –∫–∞–∫ –Ω–µ —Å—Ç–∞—Ç—å –¥—Ä–æ–ø–æ–º."
    )
    await send_safe_message(message, text, reply_markup=drops_menu())

# üé¨ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ
@dp.message(lambda message: message.text == "üé¨ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ")
async def play_video(message: types.Message):
    text = (
        "üé¨ *–ö–∞–∫ –Ω–µ —Å—Ç–∞—Ç—å –¥—Ä–æ–ø–æ–º (30 —Å–µ–∫—É–Ω–¥)*\n\n"
        "–°–º–æ—Ç—Ä–∏ –≤–∏–¥–µ–æ –ø–æ —Å—Å—ã–ª–∫–µ: https://www.youtube.com/watch?v=fTJPyZyT5R8"
    )
    await send_safe_message(message, text)

# ‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
@dp.message(lambda message: message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")
async def back_to_menu(message: types.Message):
    await send_safe_message(message, "–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üëá", reply_markup=main_menu())

# üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã / –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
@dp.message(lambda message: message.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã / –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")
async def contacts_info(message: types.Message):
    text = (
        "üìû –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –ø–∏—à–∏—Ç–µ –Ω–∞ –ø–æ—á—Ç—É: support@example.com\n"
        "üí¨ –¢–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ Telegram: @dias_helper_support"
    )
    await send_safe_message(message, text)

# ‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
@dp.message(lambda message: message.text == "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ")
async def about_bot(message: types.Message):
    text = (
        "ü§ñ *Dias Helper Bot*\n"
        "–í–µ—Ä—Å–∏—è: 1.1\n"
        "–û–ø–∏—Å–∞–Ω–∏–µ: –ë–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç —É–∑–Ω–∞—Ç—å –æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ä–∏—Å–∫–∞—Ö, —Ñ–∏—à–∏–Ω–≥–µ, –ø–∏—Ä–∞–º–∏–¥–∞—Ö –∏ –¥—Ä–æ–ø–∞—Ö.\n"
        "–°–æ–∑–¥–∞—Ç–µ–ª—å: dias_helper\n"
        "üõ°Ô∏è –í—Å–µ —Å–æ–≤–µ—Ç—ã –¥–∞–Ω—ã –≤ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª—è—Ö."
    )
    await send_safe_message(message, text)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
