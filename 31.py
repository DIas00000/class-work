from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
import asyncio

BOT_TOKEN = "8492691594:AAHGomYK8lOc-AUGzJ-PtHGopAixKsPOlI0"

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()


# ---------- 1Ô∏è‚É£ –û–ø–∏—Å–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π ----------
class FoodForm(StatesGroup):
    name = State()
    dish = State()
    rating = State()


# ---------- 2Ô∏è‚É£ –ö–æ–º–∞–Ω–¥–∞ /start ----------
@dp.message(Command("start"))
async def start(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! —ç—Ç–æ dias helper.\n\n"
        "–ù–∞—á–Ω–∏ —Å—Ü–µ–Ω–∞—Ä–∏–π –∫–æ–º–∞–Ω–¥–æ–π /food üçΩÔ∏è\n"
        "–ò–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–∏ –µ–≥–æ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç —Å –ø–æ–º–æ—â—å—é /cancel."
    )


# ---------- 3Ô∏è‚É£ –ö–æ–º–∞–Ω–¥–∞ /food ----------
@dp.message(Command("food"))
async def cmd_food(message: types.Message, state: FSMContext):
    await state.set_state(FoodForm.name)
    await message.answer("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")


# ---------- 4Ô∏è‚É£ –í–≤–æ–¥ –∏–º–µ–Ω–∏ ----------
@dp.message(FoodForm.name)
async def process_name(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(FoodForm.dish)
    await message.answer("–û—Ç–ª–∏—á–Ω–æ! –ö–∞–∫–æ–µ —Ç–≤–æ–µ –ª—é–±–∏–º–æ–µ –±–ª—é–¥–æ?")


# ---------- 5Ô∏è‚É£ –í–≤–æ–¥ –±–ª—é–¥–∞ ----------
@dp.message(FoodForm.dish)
async def process_dish(message: types.Message, state: FSMContext):
    await state.update_data(dish=message.text)
    await state.set_state(FoodForm.rating)
    await message.answer("–û—Ü–µ–Ω–∏ –µ–≥–æ –æ—Ç 1 –¥–æ 10 ‚≠ê")


# ---------- 6Ô∏è‚É£ –í–≤–æ–¥ –æ—Ü–µ–Ω–∫–∏ ----------
@dp.message(FoodForm.rating)
async def process_rating(message: types.Message, state: FSMContext):
    if not message.text.isdigit() or not (1 <= int(message.text) <= 10):
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10 üî¢")
        return

    await state.update_data(rating=int(message.text))
    data = await state.get_data()

    name = data["name"]
    dish = data["dish"]
    rating = data["rating"]

    await message.answer(
        f"–°–ø–∞—Å–∏–±–æ, {name}! üôå\n"
        f"–¢–≤–æ–µ –ª—é–±–∏–º–æ–µ –±–ª—é–¥–æ ‚Äî {dish}, –æ—Ü–µ–Ω–∫–∞: {rating}/10 ‚≠ê"
    )

    await state.clear()


# ---------- 7Ô∏è‚É£ –ö–æ–º–∞–Ω–¥–∞ /cancel ----------
@dp.message(Command("cancel"))
async def cancel(message: types.Message, state: FSMContext):
    await state.clear()
    await message.answer("–°—Ü–µ–Ω–∞—Ä–∏–π –æ—Ç–º–µ–Ω—ë–Ω. ‚ùå")


# ---------- 8Ô∏è‚É£ –ó–∞–ø—É—Å–∫ ----------
async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
