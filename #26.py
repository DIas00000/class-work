import requests
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.types import Message
import asyncio

API_TOKEN = "8492691594:AAFSmXXPnv3lL_SEwyJJs9rumwQtisM7r_U"

# ‚úÖ –ù–æ–≤—ã–π —Å–ø–æ—Å–æ–± –∑–∞–¥–∞—Ç—å parse_mode –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
bot = Bot(
    token=API_TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)
dp = Dispatcher()

CURRENCY_API_URL = "https://api.exchangerate.host/latest?base=USD&symbols=KZT,EUR,RUB"

def format_message(data: dict) -> str:
    rates = data.get("rates", {})
    usd = round(rates.get("KZT", 0), 2)
    eur = round(usd / 1.08, 2)
    rub = round(usd / 95, 2)

    message = (
        "<b>üíµ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç (–∑–∞ 1 USD):</b>\n"
        f"USD ‚Üí {usd} ‚Ç∏\n"
        f"EUR ‚Üí {eur} ‚Ç∏\n"
        f"RUB ‚Üí {rub} ‚Ç∏\n\n"
        f"–ò—Å—Ç–æ—á–Ω–∏–∫: <a href='https://exchangerate.host'>exchangerate.host</a>"
    )
    return message


@dp.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! üëã –ù–∞–ø–∏—à–∏ /rates, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç üí∞")


@dp.message(Command("rates"))
async def cmd_rates(message: Message):
    response = requests.get(CURRENCY_API_URL)
    if response.status_code == 200:
        data = response.json()
        await message.answer(format_message(data))
    else:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")


@dp.message(Command("format"))
async def cmd_format(message: Message):
    html_example = (
        "<b>–ñ–∏—Ä–Ω—ã–π</b>\n"
        "<i>–ö—É—Ä—Å–∏–≤</i>\n"
        "<u>–ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π</u>\n"
        "<a href='https://google.com'>–°—Å—ã–ª–∫–∞</a>\n"
        "<code>–ö–æ–¥</code>"
    )
    await message.answer("üß± –ü—Ä–∏–º–µ—Ä HTML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:\n" + html_example)


async def main():
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
